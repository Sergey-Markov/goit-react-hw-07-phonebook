{"version":3,"sources":["App.module.css","Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","Components/Form/Form.module.css","redux/phonebook-actions.js","redux/phonebook-operations.js","redux/phonebook-selectors.js","redux/phonebook-reducer.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","Components/Form/Form.js","App.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","onChangeFilter","axios","defaults","baseURL","newContact","dispatch","contact","phonebookActions","post","then","data","catch","error","a","get","contactId","delete","getPhonebookFilter","state","phonebook","filter","getIsLOading","loading","getFilteredContacts","createSelector","contacts","normalizeFilter","toLowerCase","trim","name","includes","createReducer","_","payload","id","combineReducers","connect","isLoading","phonebookSelectors","fetchContacts","phonebookOperations","onClick","useDispatch","useEffect","className","s","list","map","number","item","type","button","onChange","e","target","value","filterId","shortid","generate","htmlFor","label","pattern","title","required","input","Form","nameId","numberId","handleSubmit","preventDefault","console","log","props","find","alert","onSubmit","resetFormInput","hadleAddValue","currentTarget","setState","this","form","Component","operations","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,qB,mBCAjDD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,2B,mBCAvFD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,uB,4HCgB9F,GACbC,qBAhB2BC,YAAa,iCAiBxCC,qBAhB2BD,YAAa,iCAiBxCE,mBAhByBF,YAAa,+BAiBtCG,mBAfyBH,YAAa,+BAgBtCI,mBAfyBJ,YAAa,+BAgBtCK,iBAfuBL,YAAa,6BAgBpCM,sBAd4BN,YAAa,kCAezCO,sBAd4BP,YAAa,kCAezCQ,oBAd0BR,YAAa,gCAevCS,eAbqBT,YAAa,0B,0CCZpCU,IAAMC,SAASC,QAAU,wBAEzB,I,MAiCe,EAtBK,SAACC,GAAD,OAAgB,SAACC,GACnC,IAAMC,EAAUF,EAChBC,EAASE,EAAiBb,sBAE1BO,IACGO,KAAK,YAAaF,GAClBG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASE,EAAiBZ,mBAAmBe,OAChEC,OAAM,SAACC,GAAD,OAAWP,EAASE,EAAiBX,iBAAiBgB,SAelD,EAjCO,yDAAM,WAAOP,GAAP,iBAAAQ,EAAA,6DAC1BR,EAASE,EAAiBjB,wBADA,kBAIDW,IAAMa,IAAI,aAJT,gBAIhBJ,EAJgB,EAIhBA,KACRL,EAASE,EAAiBf,qBAAqBkB,IALvB,gDAOxBL,EAASE,EAAiBd,mBAAjB,OAPe,yDAAN,uDAiCP,EAZQ,SAACsB,GAAD,OAAe,SAACV,GACrCA,EAASE,EAAiBV,yBAE1BI,IACGe,OADH,oBACuBD,IACpBN,MAAK,cAAGC,KAAH,OACJL,EAASE,EAAiBT,sBAAsBiB,OAEjDJ,OAAM,SAACC,GAAD,OAAWP,EAASE,EAAiBR,oBAAoBa,S,OC7B9DK,EAAqB,SAACC,GAAD,OAAWA,EAAMC,UAAUC,QAavC,GACbC,aAhBmB,SAACH,GAAD,OAAWA,EAAMC,UAAUG,SAiB9CL,qBACAM,oBAb0BC,YAC1B,CAACP,EAL0B,SAACC,GAAD,OAAWA,EAAMC,UAAUM,YAMtD,SAACL,EAAQK,GACP,IAAMC,EAAkBN,EAAOO,cAAcC,OAC7C,OAAOH,EAASL,QAAO,SAACd,GACtB,OAAOA,EAAQuB,KAAKF,cAAcG,SAASJ,U,sBCP/CpC,EAUEiB,EAVFjB,qBACAE,EASEe,EATFf,qBACAC,EAQEc,EARFd,mBACAC,EAOEa,EAPFb,mBACAC,EAMEY,EANFZ,mBACAC,EAKEW,EALFX,iBACAC,EAIEU,EAJFV,sBACAC,EAGES,EAHFT,sBACAC,EAEEQ,EAFFR,oBACAC,EACEO,EADFP,eAGIyB,EAAWM,YAAc,IAAD,mBAE3BvC,GAAuB,SAACwC,EAAD,YAAMC,WAFF,cAG3BtC,GAAqB,SAACuB,EAAD,GAAyB,IAAfe,EAAc,EAAdA,QAC9B,MAAM,GAAN,mBAAWf,GAAX,CAAkBe,OAJQ,cAM3BnC,GAAwB,SAACoB,EAAD,OAAUe,EAAV,EAAUA,QAAV,OACvBf,EAAME,QAAO,SAACd,GAAD,OAAaA,EAAQ4B,KAAOD,QAPf,IAUxBb,EAASW,YAAc,GAAD,eACzB/B,GAAiB,SAACgC,EAAD,YAAMC,YAGpBrB,EAAQmB,YAAc,MAAD,mBACxBtC,GAAqB,SAACuC,EAAD,YAAMC,WADH,cAExB3C,GAAuB,kBAAM,QAFL,IAKrBgC,EAAUS,aAAc,GAAD,mBAC1BzC,GAAuB,kBAAM,KADH,cAE1BE,GAAuB,kBAAM,KAFH,cAG1BC,GAAqB,kBAAM,KAHD,cAI1BC,GAAqB,kBAAM,KAJD,cAK1BC,GAAqB,kBAAM,KALD,cAM1BC,GAAmB,kBAAM,KANC,cAO1BC,GAAwB,kBAAM,KAPJ,cAQ1BC,GAAwB,kBAAM,KARJ,cAS1BC,GAAsB,kBAAM,KATF,IAWdoC,cAAgB,CAC7BV,WACAL,SACAE,UACAV,U,OCTF,IAWewB,eAXS,SAAClB,GACvB,MAAO,CACLmB,UAAWC,EAAmBjB,aAAaH,GAC3CO,SAAUa,EAAmBf,oBAAoBL,OAG1B,SAACb,GAAD,MAAe,CACxCkC,cAAe,kBAAMlC,EAASmC,MAC9BC,QAAS,SAACP,GAAD,OAAQ7B,EAASmC,EAAmCN,QAGhDE,EAhDf,YAAqD,IAAjCX,EAAgC,EAAhCA,SAAUY,EAAsB,EAAtBA,UAAWI,EAAW,EAAXA,QACjCpC,EAAWqC,cAKjB,OAJAC,qBAAU,WACRtC,EAASmC,OACR,CAACnC,IAGF,gCACE,oBAAIuC,UAAWC,IAAEC,KAAjB,SACGrB,EAASsB,KAAI,SAACzC,GACb,IAAQ4B,EAAqB5B,EAArB4B,GAAIL,EAAiBvB,EAAjBuB,KAAMmB,EAAW1C,EAAX0C,OAClB,OACE,qBAAaJ,UAAWC,IAAEI,KAA1B,UACGpB,EADH,KACWmB,EACT,wBACEE,KAAK,SACLT,QAAS,WACPA,EAAQP,IAEVU,UAAWC,IAAEM,OALf,sBAFOjB,QAedG,GAAa,kD,kCCFpB,IAOeD,eAPS,SAAClB,GAAD,MAAY,CAClCE,OAAQkB,EAAmBrB,mBAAmBC,OAErB,SAACb,GAAD,MAAe,CACxC+C,SAAU,SAACC,GAAD,OAAOhD,EAASE,EAAiBP,eAAeqD,EAAEC,OAAOC,YAGtDnB,EA/Bf,YAAuC,IAArBhB,EAAoB,EAApBA,OAAQgC,EAAY,EAAZA,SAClBI,EAAWC,IAAQC,WACzB,OACE,wBAAOC,QAASH,EAAUZ,UAAWC,IAAEe,MAAvC,kCAEE,uBACE1B,GAAIsB,EACJN,KAAK,OACLrB,KAAK,SACLgC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,MAAOnC,EACPgC,SAAUA,EACVR,UAAWC,IAAEmB,c,sDCbfC,G,8MACJ/C,MAAQ,CACNW,KAAM,GACNmB,OAAQ,I,EAGVkB,OAAST,IAAQC,W,EACjBS,SAAWV,IAAQC,W,EAKnBU,aAAe,SAACf,GACdA,EAAEgB,iBACFC,QAAQC,IAAI,EAAKC,MAAM/C,UAGrB,EAAK+C,MAAM/C,SAASgD,MAAK,SAACnE,GAAD,OAAaA,EAAQuB,OAAS,EAAKX,MAAMW,QAElE6C,MAAM,GAAD,OAAI,EAAKxD,MAAMW,KAAf,0BAKP,EAAK2C,MAAMG,SAAS,EAAKzD,OACzB,EAAK0D,mB,EAEPC,cAAgB,SAACxB,GACf,MAAwBA,EAAEyB,cAAlBjD,EAAR,EAAQA,KAAM0B,EAAd,EAAcA,MACd,EAAKwB,SAAL,eAAiBlD,EAAO0B,K,qDApB1B,WACEyB,KAAKD,SAAS,CAAElD,KAAM,GAAImB,OAAQ,O,oBAqBpC,WACE,OACE,uBAAM2B,SAAUK,KAAKZ,aAAcxB,UAAWC,KAAEoC,KAAhD,UACE,uBAAOtB,QAASqB,KAAKd,OAAQtB,UAAWC,KAAEe,MAA1C,kBAGA,uBACE1B,GAAI8C,KAAKd,OACThB,KAAK,OACLrB,KAAK,OACLgC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,MAAOyB,KAAK9D,MAAMW,KAClBuB,SAAU4B,KAAKH,cACfjC,UAAWC,KAAEmB,QAEf,uBAAOL,QAASqB,KAAKb,SAAUvB,UAAWC,KAAEe,MAA5C,oBAGA,uBACE1B,GAAI8C,KAAKb,SACTjB,KAAK,MACLrB,KAAK,SACLgC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,MAAOyB,KAAK9D,MAAM8B,OAClBI,SAAU4B,KAAKH,cACfjC,UAAWC,KAAEmB,QAEf,wBAAQd,KAAK,SAASN,UAAWC,KAAEM,OAAnC,gC,GA9DW+B,aA+EJ9C,gBAPS,SAAClB,GAAD,MAAY,CAClCO,SAAUP,EAAMC,UAAUM,aAED,SAACpB,GAAD,MAAe,CACxCsE,SAAU,SAACvE,GAAD,OAAgBC,EAAS8E,EAAuB/E,QAG7CgC,CAA6C6B,ICrE7CmB,OAZf,WACE,OACE,sBAAKxC,UAAWC,IAAEuC,IAAlB,UACE,oBAAIxC,UAAWC,IAAEiB,MAAjB,uBACA,cAAC,GAAD,IACA,oBAAIlB,UAAWC,IAAEiB,MAAjB,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,4BCcAuB,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAOdC,OAeaC,GAZDC,YAAe,CAC3BC,QAAS,CAEP/E,UAAWgF,GAEbd,cACAe,UAAUC,ICnCZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAGE,cAAC,GAAD,QAIJS,SAASC,eAAe,W","file":"static/js/main.16928db8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__26Ew7\",\"title\":\"App_title__37IEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1J4pi\",\"item\":\"Contacts_item__15hrN\",\"button\":\"Contacts_button__12jOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__xXGuQ\",\"input\":\"Filter_input__2d7Ps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3TEJt\",\"label\":\"Form_label__1YaUf\",\"input\":\"Form_input__3cp7-\",\"button\":\"Form_button__3-Al-\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nconst addContactsRequest = createAction(\"contacts/addContactsRequest\");\r\nconst addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\r\nconst addContactsError = createAction(\"contacts/addContactsError\");\r\n\r\nconst deleteContactsRequest = createAction(\"contacts/deleteContactsRequest\");\r\nconst deleteContactsSuccess = createAction(\"contacts/deleteContactsSuccess\");\r\nconst deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\n\r\nconst onChangeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  onChangeFilter,\r\n};\r\n\r\n// const addContacts = (newContact) => ({\r\n//   type: phonebookActionsTypes.ADD,\r\n// payload: {\r\n//   id: shortid.generate(),\r\n//   ...newContact,\r\n// },\r\n// });\r\n\r\n// const onChangeFilter = (value) => ({\r\n//   type: phonebookActionsTypes.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n// const deleteContacts = (contactId) => ({\r\n//   type: phonebookActionsTypes.DELETE,\r\n//   payload: contactId,\r\n// });\r\n","import axios from \"axios\";\r\nimport phonebookActions from \"./phonebook-actions\";\r\naxios.defaults.baseURL = \"http://localhost:7777\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(phonebookActions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(phonebookActions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(phonebookActions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContacts = (newContact) => (dispatch) => {\r\n  const contact = newContact;\r\n  dispatch(phonebookActions.addContactsRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(phonebookActions.addContactsSuccess(data)))\r\n    .catch((error) => dispatch(phonebookActions.addContactsError(error)));\r\n};\r\n\r\nconst deleteContacts = (contactId) => (dispatch) => {\r\n  dispatch(phonebookActions.deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) =>\r\n      dispatch(phonebookActions.deleteContactsSuccess(contactId))\r\n    )\r\n    .catch((error) => dispatch(phonebookActions.deleteContactsError(error)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { addContacts, fetchContacts, deleteContacts };\r\n\r\n// ------------ если использовать Асинксанк\r\n\r\n// const addContacts = createAsyncThunk(\r\n//   \"contacts/addContacts\",\r\n//   async (contact) => {\r\n//     const { data } = await axios.post(\"/contacts\", contact);\r\n//     return data;\r\n//   }\r\n// );\r\n// const fetchContacts = createAsyncThunk(\"contacts/fetchContacts\", async () => {\r\n//   const { data } = await axios.get(\"/contacts\");\r\n//   return data;\r\n// });\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getIsLOading = (state) => state.phonebook.loading;\r\nconst getPhonebookContacts = (state) => state.phonebook.contacts;\r\nconst getPhonebookFilter = (state) => state.phonebook.filter;\r\n\r\n// Мемоизация функции\r\nconst getFilteredContacts = createSelector(\r\n  [getPhonebookFilter, getPhonebookContacts],\r\n  (filter, contacts) => {\r\n    const normalizeFilter = filter.toLowerCase().trim();\r\n    return contacts.filter((contact) => {\r\n      return contact.name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n  }\r\n);\r\n// eslint-disable-next-line\r\nexport default {\r\n  getIsLOading,\r\n  getPhonebookFilter,\r\n  getFilteredContacts,\r\n};\r\n\r\n//------------------ фильтр до мемоизации\r\n// const getFilteredContacts = (state) => {\r\n//   const filter = getPhonebookFilter(state);\r\n//   const contacts = getPhonebookContacts(state);\r\n//   const normalizeFilter = filter.toLowerCase().trim();\r\n//   return contacts.filter((contact) => {\r\n//     return contact.name.toLowerCase().includes(normalizeFilter);\r\n//   });\r\n// };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport phonebookActions from \"../redux/phonebook-actions\";\r\n\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  onChangeFilter,\r\n} = phonebookActions;\r\n\r\nconst contacts = createReducer([], {\r\n  // [phonebookOperations.fetchContacts.fulfilled]: (_, { payload }) => payload, - если использовать createAsyncThunk\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [onChangeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [fetchContactsRequest]: () => null,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n\r\n// const contacts = (state = initialContactsState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case phonebookActionsTypes.ADD:\r\n//       if (state.find((contact) => contact.name === payload.name)) {\r\n//         alert(`${payload.name} is already created!`);\r\n//         return state;\r\n//       }\r\n//       return [...state, payload];\r\n\r\n//     case phonebookActionsTypes.DELETE:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case phonebookActionsTypes.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const initialContactsState = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n","import s from \"../Contacts/Contacts.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { phonebookOperations, phonebookSelectors } from \"../../redux\";\r\nfunction Contacts({ contacts, isLoading, onClick }) {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(phonebookOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <ul className={s.list}>\r\n        {contacts.map((contact) => {\r\n          const { id, name, number } = contact;\r\n          return (\r\n            <li key={id} className={s.item}>\r\n              {name}: {number}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  onClick(id);\r\n                }}\r\n                className={s.button}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      {isLoading && <h3>Loading...</h3>}\r\n    </div>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: phonebookSelectors.getIsLOading(state),\r\n    contacts: phonebookSelectors.getFilteredContacts(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n  onClick: (id) => dispatch(phonebookOperations.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, contacts } = state.phonebook;\r\n//   const filteredContacts = () => {\r\n//     const normalizeFilter = filter.toLowerCase().trim();\r\n//     return contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(normalizeFilter)\r\n//     );\r\n//   };\r\n//   const filteredContact = filteredContacts();\r\n\r\n//   return {\r\n//     contacts: filteredContact,\r\n//   };\r\n// };\r\n","import shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../Filter/Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { phonebookActions, phonebookSelectors } from \"../../redux\";\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  const filterId = shortid.generate();\r\n  return (\r\n    <label htmlFor={filterId} className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        id={filterId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={filter}\r\n        onChange={onChange}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  filter: phonebookSelectors.getPhonebookFilter(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(phonebookActions.onChangeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport operations from \"../../redux/phonebook-operations\";\r\nimport s from \"../Form/Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameId = shortid.generate();\r\n  numberId = shortid.generate();\r\n\r\n  resetFormInput() {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.props.contacts);\r\n\r\n    if (\r\n      this.props.contacts.find((contact) => contact.name === this.state.name)\r\n    ) {\r\n      alert(`${this.state.name} is already created!`);\r\n\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.resetFormInput();\r\n  };\r\n  hadleAddValue = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label htmlFor={this.nameId} className={s.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          id={this.nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.hadleAddValue}\r\n          className={s.input}\r\n        />\r\n        <label htmlFor={this.numberId} className={s.label}>\r\n          Number\r\n        </label>\r\n        <input\r\n          id={this.numberId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.hadleAddValue}\r\n          className={s.input}\r\n        />\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.phonebook.contacts,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (newContact) => dispatch(operations.addContacts(newContact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import s from \"./App.module.css\";\r\nimport Contacts from \"./Components/Contacts/Contacts\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport Form from \"./Components/Form/Form\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={s.App}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <Form />\r\n      <h2 className={s.title}>Contacts:</h2>\r\n      <Filter />\r\n      <Contacts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./phonebook-reducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const persistConfig = {\r\n//   key: \"currentContacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\n// const myMiddleware = (store) => (next) => (action) => {\r\n//   console.log(\"My middleware for example\");\r\n//   next(action);\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // myMiddleware,\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // phonebook: persistReducer(persistConfig, contactsReducer),\r\n    phonebook: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default store;\r\n\r\n// export default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <Provider store={store.store}> */}\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}